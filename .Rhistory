SETWD
getwd
getwd()
setwd("/Users/srinu/RepData_PeerAssessment1")
getwd()
unzip()
unzip(zipfile="activity.zip",overwrite= TRUE)
ls()
ls
ls
ls -al
getwd()
data<-read.csv(file="activity.csv",header= TRUE)
str(data)
summary(data)
mean(data$steps)
mean(data$steps,na.rm= TRUE)
hist(x=data$steps)
hist(x=log(data$steps))
hist(x=ln(data$steps))
hist(x=log(data$steps))
hist(x=data$steps)
hist(x=data$steps,na.omit=T)
na.omit(data)
hist(x=data$steps,na.omit=T)
hist(x=data$steps)
hist(x=log(data$steps))
truhist
truehist()
hist(data,breaks=7)
hist(data$steps,breaks=7)
hist(data$steps,breaks=8)
hist(x=data$steps,na.omit=T)
mean(data$steps,na.rm= TRUE)
summary(data)
hist(x=data$steps,na.omit=T)
hist(data$steps,breaks=8)
hist(x=ln(data$steps))
hist(x=data$steps)
data$steps
hist(x=data$steps,freq=TRUE)
hist(x=data$steps,xlim=
2)
hist(x=data$steps,xlime=c(1,200)
)
hist(x=data$steps,xlime=c(10,200)
)
hist(x=data$steps,xlim=c(10,200))
hist(log(data$steps))
ggplot()
library(ggplot2)
ggplot(data,aes(x=data$steps)) + geom_histogram() + scale_x_log()
ggplot(data,aes(x=data$steps)) + geom_histogram()
count(data$steps)
data$steps
hist.data = hist(data,plot=F)
data(, $step != 0)
subset(data,data$steps <> 0)
hist(data$steps[data$steps>0])
hist(data$steps[data$steps>1])
hist(data$steps)
hist(data$steps[data$steps>10])
hist(data$steps,xlim=c(1,2000)
)
hist(data$steps,xlim=c(1,200))
hist(data$steps,xlim=c(1,500))
hist(data$steps,xlim=c(1,1000))
hist(data$steps,xlim=c(1,1000),ylim=c(0,5000))
hist(data$steps,xlim=c(1,1000),ylim=c(0,3000))
new<-na.omit(data)
hist(new$steps)
new
summary(new)
median(data$steps)
median(new$steps)
mean(new$steps)
mean(data$steps)
mean(data$steps,na.rm= T)
ts<- ts(data$steps)
ts
plot.ts(ts)
ts<- ts(data$steps,frequency=5)
ts
plot.ts(ts)
ts<- ts(data$steps,frequency=12*24)
plot.ts(ts)
ts<- ts(data$steps,frequency=12*24*12)
plot.ts(ts)
plot(new$steps, type="l", lwd =2 , col ="blue",xlab="time",ylab="steps",main="test")
plot(stl(log(ts),s.window="periodic"))
plot(stl(log(ts),s.window="periodic",na.rm= T))
plot(stl(log(ts),s.window="periodic",na.omit = T))
new
str(new)
new$date <- as.Date( new$date,'%Y-%m-%d')
require(ggplot2)
ggplot(data=new,aes(date,steps)) + geom_line()
plot(new$steps, type="l", lwd =2 , col ="blue",xlab="time",ylab="steps",main="test")
plot(steps~date,new,xaxt = "n",type ="l")
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(format = '%b %d', major = "1 day")
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(format = "%b %d", major = "1 day")
ggplot(data=new,aes(date,steps)) + geom_line()
ggplot(data=new,aes(date,steps))
ggplot(data=new,aes(date,steps)) + geom_line()
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date()
install.packages("scales")
ggplot(data=new,aes(date,steps)) + geom_line()
data<-read.csv(file="activity.csv",header= TRUE)
new<-na.omit(data)
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date()
library(ggplot2)
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date()
new$date <- as.Date( new$date,'%Y-%m-%d')
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date()
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(expand=T)
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(expand=TRUE)
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date()
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(labels = date_format("%W"))
library(scales)
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(labels = date_format("%W"))
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(labels = date_format("%m/%d"))
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(labels = date_format("%d"))
ggplot(data=new,aes(date,steps)) + geom_line() +  scale_x_date(breaks = date_breaks("4 weeks"),
labels = date_format("%d-%b"))
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(breaks = "1 month", minor_breaks = "1 week")
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(breaks = "1 week", minor_breaks = "1 day")
ggplot(data=new,aes(interval,steps)) + geom_line() + scale_x_date(breaks = "1 week", minor_breaks = "1 day")
str(new)
byInterval <- aggregate(steps ~ interval, data, mean, na.rm = TRUE)
ggplot(byInterval, aes(x = interval, y = steps)) + geom_line() + labs(title = "Average of Steps taken Daily",
x = "Interval", y = "Number of steps")
ggplot(data=new,aes(date,steps)) + geom_line() + scale_x_date(breaks = "1 week", minor_breaks = "1 day")
require(ggplot2)
data
byDay <- aggregate(steps ~ date, data, sum, na.action = na.pass)
byDay
mean(byDay$steps)
summary(byDay)
hist(byDay$steps)
